import { CaseBooking, CaseStatus, User } from '../../types';

export interface CasesListProps {
  onProcessCase: (caseData: CaseBooking) => void;
  currentUser: User | null;
  highlightedCaseId?: string | null;
  onClearHighlight?: () => void;
  onNavigateToPermissions?: () => void;
}

export interface CaseCardProps {
  caseItem: CaseBooking;
  currentUser: User | null;
  expandedCases: Set<string>;
  expandedStatusHistory: Set<string>;
  expandedAmendmentHistory: Set<string>;
  amendingCase: string | null;
  amendmentData: Partial<CaseBooking>;
  processingCase: string | null;
  processDetails: string;
  processAttachments: string[];
  processComments: string;
  salesApprovalCase: string | null;
  salesApprovalAttachments: string[];
  salesApprovalComments: string;
  orderPreparedCase: string | null;
  orderPreparedAttachments: string[];
  orderPreparedComments: string;
  deliveryCase: string | null;
  deliveryDetails: string;
  hospitalDeliveryCase: string | null;
  hospitalDeliveryAttachments: string[];
  hospitalDeliveryComments: string;
  receivedCase: string | null;
  receivedDetails: string;
  receivedImage: string;
  completedCase: string | null;
  attachments: string[];
  orderSummary: string;
  doNumber: string;
  pendingOfficeCase: string | null;
  pendingOfficeAttachments: string[];
  pendingOfficeComments: string;
  officeDeliveryCase: string | null;
  officeDeliveryAttachments: string[];
  officeDeliveryComments: string;
  onToggleExpansion: (caseId: string) => void;
  onToggleStatusHistory: (caseId: string) => void;
  onToggleAmendmentHistory: (caseId: string) => void;
  onStatusChange: (caseId: string, newStatus: CaseStatus) => void;
  onAmendCase: (caseItem: CaseBooking) => void;
  onSaveAmendment: (amendmentData: any) => void;
  onCancelAmendment: () => void;
  onOrderProcessed: (caseId: string) => void;
  onMarkOrderProcessed: (caseId: string) => void;
  onSaveProcessDetails: (caseId: string) => void;
  onCancelProcessing: () => void;
  onSalesApproval: (caseId: string) => void;
  onSaveSalesApproval: (caseId: string) => void;
  onCancelSalesApproval: () => void;
  onSaveOrderPrepared: (caseId: string) => void;
  onCancelOrderPrepared: () => void;
  onOrderDelivered: (caseId: string) => void;
  onSaveHospitalDelivery: (caseId: string) => void;
  onCancelHospitalDelivery: () => void;
  onOrderReceived: (caseId: string) => void;
  onSaveOrderReceived: (caseId: string) => void;
  onCancelReceived: () => void;
  onCaseCompleted: (caseId: string) => void;
  onSaveCaseCompleted: (caseId: string) => void;
  onCancelCompleted: () => void;
  onPendingDeliveryOffice: (caseId: string) => void;
  onSavePendingOffice: (caseId: string) => void;
  onCancelPendingOffice: () => void;
  onOfficeDelivery: (caseId: string) => void;
  onSaveOfficeDelivery: (caseId: string) => void;
  onCancelOfficeDelivery: () => void;
  onOrderDeliveredOffice: (caseId: string) => void;
  onToBeBilled: (caseId: string) => void;
  onDeleteCase: (caseId: string, caseItem: CaseBooking) => void;
  onCancelCase: (caseId: string) => void;
  onAttachmentUpload: (e: React.ChangeEvent<HTMLInputElement>) => void;
  onRemoveAttachment: (index: number) => void;
  onAmendmentDataChange: (data: Partial<CaseBooking>) => void;
  onProcessDetailsChange: (details: string) => void;
  onProcessAttachmentsChange: (attachments: string[]) => void;
  onProcessCommentsChange: (comments: string) => void;
  onSalesApprovalAttachmentsChange: (attachments: string[]) => void;
  onSalesApprovalCommentsChange: (comments: string) => void;
  onOrderPreparedAttachmentsChange: (attachments: string[]) => void;
  onOrderPreparedCommentsChange: (comments: string) => void;
  onHospitalDeliveryAttachmentsChange: (attachments: string[]) => void;
  onHospitalDeliveryCommentsChange: (comments: string) => void;
  onReceivedDetailsChange: (details: string) => void;
  onReceivedImageChange: (image: string) => void;
  onOrderSummaryChange: (summary: string) => void;
  onDoNumberChange: (doNumber: string) => void;
  onPendingOfficeAttachmentsChange: (attachments: string[]) => void;
  onPendingOfficeCommentsChange: (comments: string) => void;
  onOfficeDeliveryAttachmentsChange: (attachments: string[]) => void;
  onOfficeDeliveryCommentsChange: (comments: string) => void;
  onCompletedAttachmentsChange: (attachments: string[]) => void;
  onCaseAttachmentsChange: (caseId: string, attachments: string[]) => void;
  onNavigateToPermissions?: () => void;
}

export interface CaseActionsProps {
  caseItem: CaseBooking;
  currentUser: User | null;
  onStatusChange: (caseId: string, newStatus: CaseStatus) => void;
  onAmendCase: (caseItem: CaseBooking) => void;
  onDeleteCase: (caseId: string, caseItem: CaseBooking) => void;
  onOrderProcessed: (caseId: string) => void;
  onMarkOrderProcessed: (caseId: string) => void;
  onSalesApproval: (caseId: string) => void;
  onOrderDelivered: (caseId: string) => void;
  onOrderReceived: (caseId: string) => void;
  onCaseCompleted: (caseId: string) => void;
  onPendingDeliveryOffice: (caseId: string) => void;
  onOfficeDelivery: (caseId: string) => void;
  onOrderDeliveredOffice: (caseId: string) => void;
  onToBeBilled: (caseId: string) => void;
  onCancelCase: (caseId: string) => void;
  canAmendCase: (caseItem: CaseBooking) => boolean;
}